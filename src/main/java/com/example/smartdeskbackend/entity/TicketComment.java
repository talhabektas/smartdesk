package com.example.smartdeskbackend.entity;

import com.example.smartdeskbackend.entity.base.AuditableEntity;
import com.example.smartdeskbackend.enums.*;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;


@Entity
@Table(name = "ticket_comments", indexes = {
        @Index(name = "idx_comment_ticket", columnList = "ticket_id"),
        @Index(name = "idx_comment_author", columnList = "author_id"),
        @Index(name = "idx_comment_created_at", columnList = "created_at")
})
public class TicketComment extends AuditableEntity {

    @NotBlank(message = "Comment message is required")
    @Column(name = "message", nullable = false, columnDefinition = "TEXT")
    private String message;

    @Column(name = "is_internal", nullable = false)
    private Boolean isInternal = false;

    @Column(name = "is_auto_generated", nullable = false)
    private Boolean isAutoGenerated = false;

    @Column(name = "comment_type", length = 20)
    private String commentType = "COMMENT"; // COMMENT, STATUS_CHANGE, ASSIGNMENT, etc.

    // Relationships
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ticket_id", nullable = false, foreignKey = @ForeignKey(name = "fk_comment_ticket"))
    private Ticket ticket;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "author_id", nullable = false, foreignKey = @ForeignKey(name = "fk_comment_author"))
    private User author;

    // Constructors
    public TicketComment() {
        super();
    }

    public TicketComment(String message, Ticket ticket, User author) {
        this();
        this.message = message;
        this.ticket = ticket;
        this.author = author;
    }

    // Business Methods
    public boolean isInternal() {
        return isInternal != null && isInternal;
    }

    public boolean isAutoGenerated() {
        return isAutoGenerated != null && isAutoGenerated;
    }

    public boolean isSystemComment() {
        return isAutoGenerated() || "SYSTEM".equals(commentType);
    }

    // Getters and Setters
    public String getMessage() { return message; }
    public void setMessage(String message) { this.message = message; }

    public Boolean getIsInternal() { return isInternal; }
    public void setIsInternal(Boolean isInternal) { this.isInternal = isInternal; }

    public Boolean getIsAutoGenerated() { return isAutoGenerated; }
    public void setIsAutoGenerated(Boolean isAutoGenerated) { this.isAutoGenerated = isAutoGenerated; }

    public String getCommentType() { return commentType; }
    public void setCommentType(String commentType) { this.commentType = commentType; }

    public Ticket getTicket() { return ticket; }
    public void setTicket(Ticket ticket) { this.ticket = ticket; }

    public User getAuthor() { return author; }
    public void setAuthor(User author) { this.author = author; }
}
